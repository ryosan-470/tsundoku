<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ryosan-470の積ん読ブログ</title>
    <link>https://ryosan-470.github.io/tsundoku/</link>
    <description>Recent content on ryosan-470の積ん読ブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 24 Nov 2019 18:34:01 +0900</lastBuildDate>
    
	<atom:link href="https://ryosan-470.github.io/tsundoku/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Increasing access to blockchain and ledger databases</title>
      <link>https://ryosan-470.github.io/tsundoku/posts/aws/qldb/</link>
      <pubDate>Sun, 24 Nov 2019 18:34:01 +0900</pubDate>
      
      <guid>https://ryosan-470.github.io/tsundoku/posts/aws/qldb/</guid>
      <description>Increasing access to blockchain and ledger databases 昨年、HARAというジャカルタにあるAWSの顧客を訪問しました。彼らは発展途上国で種子や肥料、道具といったものの配給業者や銀行と小さな農家をつなぐものを作っています。伝統的に田舎の農家は口座開設やクレジット申請に必要な情報を通常持っていないため、金融業界から無視されてきました。HARAでは小規模な農場に関するこの入手困難なデータを収集し認証しているため、これらの農家はこれまでアクセスできなかったリソースにアクセスできるようになります。
HARAが作成したシステムの主なコンポーネントはブロックチェーンでできています。この技術は複数の当事者がピアツーピアネットワークを介して会話をし、中央の信頼できる機関を持たずにイミュータブルなトランザクションを記録するアプリケーションで利用されています。HARAはEthereumという人気でオープンソースなブロックチェーンプラットフォーム上で動くアプリケーションを動作させるために追加の技術を開発しなければなりませんでした。
これはNestleやSingapore Exchangeなど、多くの顧客と共有している問題です。現在ではブロックチェーン上にスケーラブルなエンタープライズアプリケーションを構築することは時間がかかり複雑です。これらの課題を解決できない組織は取り残されています。彼らのアイデアも取り残されており、HARAのような世界をよくするようなアイデアが取り残されてしまいます。
ブロックチェーンネットワークへの関連付けの複雑性を排除するために、私達は最近、スケーラブルなブロックチェーンネットワークを簡単に構築し管理できる完全にマネージドなサービスであるAmazon Managed Blockchainを発表しました。
さらにデータ完全性のためにブロックチェーンの同じような機能を提供する元帳データベースであるAmazon Quantum Ledger Database (Amazon QLDB) も公開しました。中央の信頼できる機関のある中央集権的なシステム用に設計されています。Amazon QLDBは透明性があり、不変で、中央の信頼できる機関によって保持される暗号化された検証可能なトランザクションログを提供します。
この記事ではこれらの概念とブロックチェーンを用いて構築する人々の課題、これらの問題を解決するための2つのサービスについて深く紹介します。
ブロックチェーンと元帳技術の詳細 さて、まずブロックチェーンの背後にあるいくつかの技術を詳しくみていきましょう。元帳、合意アルゴリズム、およびスマートコントラクトです。
ブロックチェーンはデータ完全性を維持するために設計されています。それらはイミュータブルであるため、コミットされたデータの歴史を変更、または削除することはできず更新しかできません。元帳はブロックチェーンがイミュータブルであるということを用いてブロックを構築するため、これからこの概念の詳細を説明していこうとおもいます。
元帳は長い間存在しており、通常は2つ以上の当事者間の経済及び金融活動の歴史を記録するために使用されていました。メソポタミアや古代エジプトのような初期の文明でも石やパピルスを用いて元帳を使っていました。今日では貸方や借方を追跡する銀行アプリケーションが最もよく使われる元帳の例です。
ブロックチェーン (現在はAmazon QLDB) で見つかった元帳は通常次のもので構成されています。
 現在、そして歴史的な状態 : 現在と歴史の状態値を持つデータ構造により、トランザクションログ全体をたどることなく簡単にデータへアクセスできる。 ジャーナル : トランザクションログはデータ変更の全体の歴史を完全にレコードとして持っています。トランザクションログは追記のみ可能であり、つまりそれぞれの新しいレコードは以前のレコードにつながっています。そうすることでデータ変更の歴史を線形的に見ることができます。 さらに暗号化ハッシュ (各レコードに一意の識別子 (フィンガープリント) を割り当てるプロセス) を使用してブロックを互いに連鎖させます。これにより元帳にタイムキーピング属性をもたせ誰でも時間内に過去を振り返りデータトランザクションが発生したことを証明できるため監査が容易になります。  データベースは本質的には不変ではないため、顧客が監査メカニズムを設計する必要があるリレーショナルデータベースと比較してみましょう。リレーショナルデータベースにて構築されるそのような監査メカニズムはスケールすることが困難になります。それらは正しいデータがすべて記録されていることを確認するためにアプリケーション開発者に負担をかけます。
 L: 元帳データベース J: ジャーナル C | H: 現在 | 歴史  更にブロックチェーンのような分散元帳は、合意メカニズムとスマートコントラクトを実行する環境を含んでいます。
 合意アルゴリズム はネットワーク内のメンバーが元帳にトランザクションとデータをコミットするための合意手段として保証するものです。もし合意の必要性が適合しなかった場合、トランザクションはロールバックされ無効になります。 スマートコントラクト は契約に対する契約の規則および罰則がコード行に定義されているプログラムです。プログラムは契約条件が満たされたときに継続的にチェックされ、契約が自動的に実行されるようにします。  これらの要素を組み合わせることで2人以上の当事者が分散信託で取引することが可能になります。各当事者はその取引に合意し、その取引を記録します。分散型の信頼は複数の組織が独立してトランザクション履歴を検証し、単一の最新で正確なデータビューを持つ必要がある場合に意味があります。アプリケーションを維持することを望んでいる単一の当事者がいないが、ネットワークメンバーが依然として他の当事者と効率的に取引したいというときにも意味があります。
分散型の信頼が必要な貿易金融アプリケーションの例についてみてみましょう。国境をまたぐ品物の取引には輸入業者、輸出業者、複数の銀行、運送会社、保険会社、税関など多くの組織が互いに連携する必要があります。多くのステークホルダーが関わるため、信頼できる中央機関はありません。それぞれのステークホルダーは取引に関連する文書を独自に検証したいと考えており、単一の組織が活動の記録を所有することを望んでいません。
現在のプロセスでは貿易に関する事務処理 (例えば信用状など) のやり取りが必要で、完了までに5 〜 10営業日かかることがあります。これにより長い処理時間と高い費用をもたらしています。</description>
    </item>
    
    <item>
      <title>積ん読ブログHugo化してみるの巻</title>
      <link>https://ryosan-470.github.io/tsundoku/posts/hello/</link>
      <pubDate>Sun, 24 Nov 2019 17:40:21 +0900</pubDate>
      
      <guid>https://ryosan-470.github.io/tsundoku/posts/hello/</guid>
      <description>少し前から自分が読んでみたいエンジニアリングの記事のうち、主に英語で書かれているものをピックアップして、軽く訳してみたものをGitHub Pagesに上げていました。 しかし特に読みやすいように公開していたわけでもないのですがこの度重い腰を上げて、Hugoで公開してみたいと思います。
翻訳について 翻訳については素人が雰囲気で翻訳しています。もし翻訳違いなどありましたらPRを送っていただけると幸いです。
何を読もうとしているのか? 私がどんな物に興味があり何を読もうとしているかについては、イシューとプロジェクトを御覧ください。
 https://github.com/ryosan-470/tsundoku/issues https://github.com/ryosan-470/tsundoku/projects  それでは。</description>
    </item>
    
  </channel>
</rss>